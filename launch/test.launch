<launch>

    <arg name = "model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name = "pose_x"      value = "0" />
    <arg name = "pose_y"      value = "0" />
    <arg name = "pose_z"      value = "0" />

    <!-- start world -->
    <include file="$(find multirobot_merge)/launch/world.launch" />

    <!-- TurtleBot -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro'"/>
    <node 
        name = "spawn_urdf"
        pkg  = "gazebo_ros" 
        type = "spawn_model"
        args = "-urdf -model turtlebot3_robot1 -param robot_description -x $(arg pose_x) -y $(arg pose_y) -z $(arg pose_z)" 
    />
    <node 
        name   = "robot_state_publisher" 
        pkg    = "robot_state_publisher" 
        type   = "robot_state_publisher" 
        output = "screen"
    />
    <node 
        name = "joint_state_publisher" 
        pkg  = "joint_state_publisher" 
        type = "joint_state_publisher"
    />

    <!-- SLAM -->
    <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping">
        <param name="odom_frame" value="odom"/>
        <param name="base_frame" value="base_footprint"/>
        <param name="map_frame"  value="map"/>
        <rosparam command="load" file="$(find multirobot_merge)/param/gmapping_params.yaml" />
        <param name="iterations" value="10" />
    </node>

    <!-- move_base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <param name="base_global_planner" value="global_planner/GlobalPlanner" />
        <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
        <rosparam file = "$(find multirobot_merge)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file = "$(find multirobot_merge)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file = "$(find multirobot_merge)/param/local_costmap_params.yaml" command="load" />
        <rosparam file = "$(find multirobot_merge)/param/global_costmap_params.yaml" command="load" />
        <rosparam file = "$(find multirobot_merge)/param/move_base_params.yaml" command="load" />
        <rosparam file = "$(find multirobot_merge)/param/dwa_local_planner_params.yaml" command="load" />
        <rosparam file = "$(find multirobot_merge)/param/global_planner_params.yaml" command="load" />
        <param name = "global_costmap/robot_base_frame" value="base_footprint"/>
        <param name = "local_costmap/robot_base_frame"  value="base_footprint"/>
        <param name = "global_costmap/global_frame"     value="map"/>
        <param name = "local_costmap/global_frame"      value="odom"/>
        <param name = "local_costmap/scan/sensor_frame" value="base_scan"/>
    </node>

    <node 
        pkg      = "rviz" 
        type     = "rviz" 
        name     = "rviz" 
        required = "true"
        args     = "-d $(find multirobot_merge)/test.rviz"
    />
    
</launch>