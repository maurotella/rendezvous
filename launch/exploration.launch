<launch>

    <arg name = "robot_name" default=""/>
    <arg name = "model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name = "pose_x"       default="0" />
    <arg name = "pose_y"       default="3" />
    <arg name = "pose_z"       default="0" />
    <arg name = "slam_methods" default="gmapping" />
    <arg name = "move_forward_only" default="false"/>
    <arg name = "cmd_vel_topic" default="/cmd_vel" />
    <arg name = "odom_topic" default="odom" />

    <!-- World -->
    <include file="$(find multirobot_merge)/launch/world.launch" />

    <!--TurtleBot -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro'"/>
    <node 
        name = "spawn_urdf"
        pkg  = "gazebo_ros" 
        type = "spawn_model"
        args = "-urdf -model turtlebot3_$(arg robot_name) -param robot_description -x $(arg pose_x) -y $(arg pose_y) -z $(arg pose_z)" />
    <node 
        name   = "robot_state_publisher" 
        pkg    = "robot_state_publisher" 
        type   = "robot_state_publisher" 
        output = "screen" />
    <node 
        name = "joint_state_publisher" 
        pkg  = "joint_state_publisher" 
        type = "joint_state_publisher" />

    <!-- SLAM -->
    <include file = "$(find multirobot_merge)/launch/$(arg slam_methods).launch">
        <arg name = "model" value="$(arg model)"/>
        <arg name = "multi_robot_name" value="$(arg robot_name)"/>
        <arg name = "set_map_frame"  value="map"/>
        <arg name = "set_base_frame" default="base_footprint"/>
        <arg name = "set_odom_frame" default="odom"/>
    </include>
    
    <!-- Navigation -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
        <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
        <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
        <remap from="odom" to="$(arg odom_topic)"/>
        <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
    </node>

    <!-- Exploration -->
    <node pkg="explore_lite" type="explore" respawn="false" name="explore" output="screen">
        <param name="robot_base_frame" value="base_link"/>
        <param name="costmap_topic" value="map"/>
        <param name="costmap_updates_topic" value="map_updates"/>
        <param name="visualize" value="true"/>
        <param name="planner_frequency" value="0.33"/>
        <param name="progress_timeout" value="30.0"/>
        <param name="potential_scale" value="3.0"/>
        <param name="orientation_scale" value="0.0"/>
        <param name="gain_scale" value="1.0"/>
        <param name="transform_tolerance" value="0.3"/>
        <param name="min_frontier_size" value="0.75"/>
    </node>

    <!-- RVIZ -->
    <node 
      pkg      = "rviz" 
      type     = "rviz" 
      name     = "rviz" 
      required = "true"
      args     = "-d $(find multirobot_merge)/exploration.rviz"
    />

</launch>